<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- 객체(component)를 선택한 것만 com.mire.biz패키지 에서 찾는다 -->
	<context:component-scan base-package="com.kiosk.biz"/>
	<aop:aspectj-autoproxy />
	
	<aop:config>
		
	</aop:config>
	
</beans>






<!-- @Component 안만들고 xml bean으로 출력 
	 <bean class="com.mire.biz.tv.LgSpeaker"></bean> -->




<!-- 1. 생성자 IoC
	 <bean id="stv" class="com.mire.biz.tv.SamsungTV" >
		<constructor-arg ref="lgSpeaker"></constructor-arg>
		<constructor-arg value="100000"></constructor-arg>
	</bean> 
	
	 2. setter IoC
	<bean id="stv" class="com.mire.biz.tv.SamsungTV" >
		<property name="speaker" ref="sonySpeaker"></property>
		<property name="price" value="100000"></property>
	</bean>
	
	3. 객체관리
	<bean id="tv" class="com.mire.biz.tv.LgTV" />
	<bean id="stv" class="com.mire.biz.tv.SamsungTV" p:speaker-ref="sonySpeaker" p:price="110000"></bean>
	<bean id="sonySpeaker" class="com.mire.biz.tv.SonySpeaker" />
	<bean id="lgSpeaker" class="com.mire.biz.tv.LgSpeaker" />
	
	<bean id="collectionBean" class="com.mire.ioc.ingection.CollectionBean">
		 생성자 property 
		<property name="addressList">
			<list>
				<value>서울시 강남구 역삼동</value>
				<value>서울시 성동구 행당동</value>			
			</list>
		</property>
	</bean>
	
	4. 컬렉션 프레임워크
	<bean id="collectionBean" class="com.mire.ioc.ingection.CollectionBean">
	<property name="addressList">
			<list>
			<value>======List========</value>
				<value>서울시 강남구 역삼동</value>
				<value>서울시 성동구 행당동</value>	
				<value>======Set=========</value>		
			</list>
		</property>
		
		<property name="book">
			<set value-type="java.lang.String">
				<value>자바 미래</value>
				<value>자바 프레임워크</value>
				<value>네트워크</value>
				<value>======Map=========</value>
			</set>
		</property>
		
		<property name="time">
			<map>
				<entry>
					<key><value>월요일</value></key>
						<value>짜장</value>
				</entry>
				<entry>
					<key><value>화요일</value></key>
					<value>짬뽕</value>
				</entry>
			</map>
		</property>
			</bean>
			
	5. AOP
	<bean id="log" class="com.mire.biz.common.LogAdvice"></bean>
	<bean id="log2" class="com.mire.biz.common.LogAdvice2"></bean>
	<bean id="log3" class="com.mire.biz.common.AfterReturningAdvice"></bean>
	<bean id="log4" class="com.mire.biz.common.AfterThrowingAdvice"></bean>
	<bean id="log5" class="com.mire.biz.common.AroundAdvice"></bean>
	
	
	
		 어떤 객체에있는 함수만 선택해서 패턴검색 com.mire.biz..패키지, *Impl 클래스, *(..)함수 명 매개변수 뭐가 들어오든 상관없다 
		<aop:pointcut expression="execution(* com.mire.biz..*Impl.*(..))" id="allPointcut"/>
		 *Impl 클래스, .get*(..)함수 명 
		<aop:pointcut expression="execution(* com.mire.biz..*Impl.get*(..))" id="getPointcut"/>
		
		
		 뜨개질로 <bean id="log" class="com.mire.biz.common.LogAdvice"></bean> 가져오기  
		<aop:aspect ref="log4"> 
			<aop:after-throwing method="afterThrowingLog" pointcut-ref="allPointcut"
			throwing="exception"/>
		
		</aop:aspect>
-->